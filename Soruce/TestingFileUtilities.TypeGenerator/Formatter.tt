<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System;
using TestingFileUtilities;

<# foreach(var type in _types) { #>

namespace <#= type.NamespaceName #>
{
    public partial class <#= type.Name #>
    {
<# foreach(var property in type.Properties) { #>
        public <#= property.Type #> <#= property.Name #>  { get; } = <#= property.Expression #>;
<# } #>

<# foreach(var childType in type.ChildTypes) { #>
        public partial class <#= childType.Name #>
        {
            public <#= childType.Name #>(
                <#=string.Join(",\r\n                ", childType.Properties.Select(_=>_.Type + " " + _.Name)) #>
            )
            {
<# foreach(var property in childType.Properties) { #>
                this.<#= property.Name #> = <#= property.Name #>;
<# } #>
            }
<# foreach(var property in childType.Properties) { #>
            public <#= property.Type #> <#= property.Name #> { get; }
<# } #>
        }

<# } #>
    }
}
<# } #>

<#+
        internal string StringJoin<T>(IEnumerable<T> list, Func<T,string> formatter)
        {
            return string.Join(",\r\n                ", list.Select(formatter));
        }
#>